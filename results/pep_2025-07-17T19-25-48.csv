number,name,status
0001,PEP 1 – PEP Purpose and Guidelines,Active
0013,PEP 13 – Python Language Governance,Active
0160,PEP 160 – Python 1.6 Release Schedule,Final
0042,PEP 42 – Feature Requests,Withdrawn
0102,PEP 102 – Doing Python Micro Releases,Superseded
0101,PEP 101 – Doing Python Releases 101,Active
0020,PEP 20 – The Zen of Python,Active
0103,PEP 103 – Collecting information about git,Withdrawn
0100,PEP 100 – Python Unicode Integration,Final
0012,PEP 12 – Sample reStructuredText PEP Template,Active
0011,PEP 11 – CPython platform support,Active
0010,PEP 10 – Voting Guidelines,Active
0008,PEP 8 – Style Guide for Python Code,Active
0009,PEP 9 – Sample Plaintext PEP Template,Withdrawn
0007,PEP 7 – Style Guide for C Code,Active
8106,PEP 8106 – 2025 Term Steering Council election,Final
0006,PEP 6 – Bug Fix Releases,Superseded
8105,PEP 8105 – 2024 Term Steering Council election,Final
8104,PEP 8104 – 2023 Term Steering Council election,Final
8103,PEP 8103 – 2022 Term Steering Council election,Final
8102,PEP 8102 – 2021 Term Steering Council election,Final
8101,PEP 8101 – 2020 Term Steering Council election,Final
8100,PEP 8100 – January 2019 Steering Council election,Final
8015,PEP 8015 – Organization of the Python community,Rejected
8016,PEP 8016 – The Steering Council Model,Accepted
8011,PEP 8011 – Python Governance Model Lead by Trio of Pythonistas,Rejected
8014,PEP 8014 – The Commons Governance Model,Rejected
8010,PEP 8010 – The Technical Leader Governance Model,Rejected
8013,PEP 8013 – The External Council Governance Model,Rejected
8012,PEP 8012 – The Community Governance Model,Rejected
8000,PEP 8000 – Python Language Governance Proposal Overview,Final
8001,PEP 8001 – Python Governance Voting Process,Final
8002,PEP 8002 – Open Source Governance Survey,Final
3152,PEP 3152 – Cofunctions,Rejected
3155,PEP 3155 – Qualified name for classes and functions,Final
3153,PEP 3153 – Asynchronous IO support,Superseded
3154,PEP 3154 – Pickle protocol version 4,Final
3151,PEP 3151 – Reworking the OS and IO exception hierarchy,Final
3333,PEP 3333 – Python Web Server Gateway Interface v1.0.1,Final
3156,PEP 3156 – Asynchronous IO Support Rebooted: the “asyncio” Module,Final
3150,PEP 3150 – Statement local namespaces (aka “given” clause),Deferred
3149,PEP 3149 – ABI version tagged .so files,Final
3148,execute computations asynchronously,Final
3147,PEP 3147 – PYC Repository Directories,Final
3146,PEP 3146 – Merging Unladen Swallow into CPython,Withdrawn
3144,PEP 3144 – IP Address Manipulation Library for the Python Standard Library,Final
3143,PEP 3143 – Standard daemon process library,Deferred
3145,PEP 3145 – Asynchronous I/O For subprocess.Popen,Withdrawn
3142,PEP 3142 – Add a “while” clause to generator expressions,Rejected
3141,PEP 3141 – A Type Hierarchy for Numbers,Final
3140,"PEP 3140 – str(container) should call str(item), not repr(item)",Rejected
3139,PEP 3139 – Cleaning out sys and the “interpreter” module,Rejected
3136,PEP 3136 – Labeled break and continue,Rejected
3134,PEP 3134 – Exception Chaining and Embedded Tracebacks,Final
3137,PEP 3137 – Immutable Bytes and Mutable Buffer,Final
3135,PEP 3135 – New Super,Final
3133,PEP 3133 – Introducing Roles,Rejected
3132,PEP 3132 – Extended Iterable Unpacking,Final
3130,PEP 3130 – Access to Current Module/Class/Function,Rejected
3131,PEP 3131 – Supporting Non-ASCII Identifiers,Final
3129,PEP 3129 – Class Decorators,Final
3138,PEP 3138 – String representation in Python 3000,Final
3128,PEP 3128 – BList: A Faster List-like Type,Rejected
3126,PEP 3126 – Remove Implicit String Concatenation,Rejected
3127,PEP 3127 – Integer Literal Support and Syntax,Final
3125,PEP 3125 – Remove Backslash Continuation,Rejected
3124,"PEP 3124 – Overloading, Generic Functions, Interfaces, and Adaptation",Deferred
3123,PEP 3123 – Making PyObject_HEAD conform to standard C,Final
3122,PEP 3122 – Delineation of the main module,Rejected
3121,PEP 3121 – Extension Module Initialization and Finalization,Final
3120,PEP 3120 – Using UTF-8 as the default source encoding,Final
3117,PEP 3117 – Postfix type declarations,Rejected
3116,PEP 3116 – New I/O,Final
3115,PEP 3115 – Metaclasses in Python 3000,Final
3118,PEP 3118 – Revising the buffer protocol,Final
3113,PEP 3113 – Removal of Tuple Parameter Unpacking,Final
3111,PEP 3111 – Simple input built-in in Python 3000,Final
3114,PEP 3114 – Renaming iterator.next() to iterator.__next__(),Final
3112,PEP 3112 – Bytes literals in Python 3000,Final
3119,PEP 3119 – Introducing Abstract Base Classes,Final
3110,PEP 3110 – Catching Exceptions in Python 3000,Final
3109,PEP 3109 – Raising Exceptions in Python 3000,Final
3108,PEP 3108 – Standard Library Reorganization,Final
3102,PEP 3102 – Keyword-Only Arguments,Final
3105,PEP 3105 – Make print a function,Final
3103,PEP 3103 – A Switch/Case Statement,Rejected
3106,"PEP 3106 – Revamping dict.keys(), .values() and .items()",Final
3101,PEP 3101 – Advanced String Formatting,Final
3107,PEP 3107 – Function Annotations,Final
3104,PEP 3104 – Access to Names in Outer Scopes,Final
3100,PEP 3100 – Miscellaneous Python 3.0 Plans,Final
3099,PEP 3099 – Things that will Not Change in Python 3000,Final
3003,PEP 3003 – Python Language Moratorium,Final
3002,PEP 3002 – Procedure for Backwards-Incompatible Changes,Final
0801,PEP 801 – Reserved,Active
3001,PEP 3001 – Procedure for reviewing and improving standard library modules,Withdrawn
2026,PEP 2026 – Calendar versioning for Python,Rejected
3000,PEP 3000 – Python 3000,Final
0790,PEP 790 – Python 3.15 Release Schedule,Active
0792,PEP 792 – Project status markers in the simple index,Accepted
0791,PEP 791 – imath — module for integer-specific mathematics functions,Draft
0787,PEP 787 – Safer subprocess usage using t-strings,Deferred
0788,PEP 788 – PyInterpreterRef: Interpreter References in the C API,Draft
0793,PEP 793 – PyModExport: A new entry point for C extension modules,Draft
0783,PEP 783 – Emscripten Packaging,Draft
0784,PEP 784 – Adding Zstandard to the standard library,Final
0785,PEP 785 – New methods for easier handling of,Draft
0789,PEP 789 – Preventing task-cancellation bugs by limiting yield in async generators,Draft
0782,PEP 782 – Add PyBytesWriter C API,Draft
0780,PEP 780 – ABI features as environment markers,Draft
0781,PEP 781 – Make,Draft
0775,PEP 775 – Make zlib required to build CPython,Withdrawn
0779,PEP 779 – Criteria for supported status for free-threaded Python,Accepted
0778,PEP 778 – Supporting Symlinks in Wheels,Deferred
0777,PEP 777 – How to Re-invent the Wheel,Draft
0774,PEP 774 – Removing the LLVM requirement for JIT builds,Deferred
0776,PEP 776 – Emscripten Support,Draft
0772,PEP 772 – Packaging Council governance process,Draft
0773,PEP 773 – A Python Installation Manager for Windows,Accepted
0771,PEP 771 – Default Extras for Python Software Packages,Draft
0770,PEP 770 – Improving measurability of Python packages with Software Bill-of-Materials,Accepted
0769,"PEP 769 – Add a ‘default’ keyword argument to ‘attrgetter’, ‘itemgetter’ and ‘getitem’",Rejected
0768,PEP 768 – Safe external debugger interface for CPython,Accepted
0767,PEP 767 – Annotating Read-Only Attributes,Draft
0794,PEP 794 – Import Name Metadata,Draft
0765,PEP 765 – Disallow return/break/continue that exit a finally block,Final
0766,PEP 766 – Explicit Priority Choices Among Multiple Indexes,Draft
0763,PEP 763 – Limiting deletions on PyPI,Draft
0762,PEP 762 – REPL-acing the default REPL,Final
0761,PEP 761 – Deprecating PGP signatures for CPython artifacts,Active
0760,PEP 760 – No More Bare Excepts,Withdrawn
0758,PEP 758 – Allow,Final
0759,PEP 759 – External Wheel Hosting,Withdrawn
0757,PEP 757 – C API to import-export Python integers,Final
0756,PEP 756 – Add PyUnicode_Export() and PyUnicode_Import() C functions,Withdrawn
0754,PEP 754 – IEEE 754 Floating Point Special Values,Rejected
0755,PEP 755 – Implicit namespace policy for PyPI,Draft
0753,PEP 753 – Uniform project URLs in core metadata,Accepted
0752,PEP 752 – Implicit namespaces for package repositories,Draft
0764,PEP 764 – Inline typed dictionaries,Draft
0747,PEP 747 – Annotating Type Forms,Draft
0749,PEP 749 – Implementing PEP 649,Accepted
0745,PEP 745 – Python 3.14 Release Schedule,Active
0751,PEP 751 – A file format to record Python dependencies for installation reproducibility,Final
0750,PEP 750 – Template Strings,Accepted
0746,PEP 746 – Type checking Annotated metadata,Draft
0741,PEP 741 – Python Configuration C API,Final
0743,PEP 743 – Add Py_COMPAT_API_VERSION to the Python C API,Draft
0742,PEP 742 – Narrowing types with TypeIs,Final
0744,PEP 744 – JIT Compilation,Draft
0738,PEP 738 – Adding Android as a supported platform,Final
0736,PEP 736 – Shorthand syntax for keyword arguments at invocation,Rejected
0740,PEP 740 – Index support for digital attestations,Final
0739,PEP 739 –,Accepted
0737,PEP 737 – C API to format a type fully qualified name,Final
0732,PEP 732 – The Python Documentation Editorial Board,Active
0735,PEP 735 – Dependency Groups in pyproject.toml,Final
0734,PEP 734 – Multiple Interpreters in the Stdlib,Final
0729,PEP 729 – Typing governance process,Active
0731,PEP 731 – C API Working Group Charter,Active
0730,PEP 730 – Adding iOS as a supported platform,Final
0728,PEP 728 – TypedDict with Typed Extra Items,Draft
0748,PEP 748 – A Unified TLS API for Python,Draft
0726,PEP 726 – Module,Rejected
0724,PEP 724 – Stricter Type Guards,Withdrawn
0727,PEP 727 – Documentation in Annotated Metadata,Withdrawn
0721,PEP 721 – Using tarfile.data_filter for source distribution extraction,Final
0720,PEP 720 – Cross-compiling Python packages,Draft
0733,PEP 733 – An Evaluation of Python’s Public C API,Final
0719,PEP 719 – Python 3.13 Release Schedule,Active
0718,PEP 718 – Subscriptable functions,Draft
0713,PEP 713 – Callable Modules,Rejected
0715,PEP 715 – Disabling bdist_egg distribution uploads on PyPI,Final
0714,PEP 714 – Rename dist-info-metadata in the Simple API,Accepted
0725,PEP 725 – Specifying external dependencies in pyproject.toml,Draft
0711,PEP 711 – PyBI: a standard format for distributing Python Binaries,Draft
0712,PEP 712 – Adding a “converter” parameter to dataclasses.field,Rejected
0722,PEP 722 – Dependency specification for single-file scripts,Rejected
0709,PEP 709 – Inlined comprehensions,Final
0710,PEP 710 – Recording the provenance of installed packages,Draft
0723,PEP 723 – Inline script metadata,Final
0705,PEP 705 – TypedDict: Read-only items,Final
0704,PEP 704 – Require virtual environments by default for package installers,Withdrawn
0703,PEP 703 – Making the Global Interpreter Lock Optional in CPython,Accepted
0700,PEP 700 – Additional Fields for the Simple API for Package Indexes,Final
0699,PEP 699 – Remove private dict version field added in PEP 509,Accepted
0708,PEP 708 – Extending the Repository API to Mitigate Dependency Confusion Attacks,Provisional
0707,PEP 707 – A simplified signature for __exit__ and __aexit__,Rejected
0697,PEP 697 – Limited C API for Extending Opaque Types,Final
0706,PEP 706 – Filter for tarfile.extractall,Final
0702,PEP 702 – Marking deprecations using the type system,Final
0693,PEP 693 – Python 3.12 Release Schedule,Active
0695,PEP 695 – Type Parameter Syntax,Final
0698,PEP 698 – Override Decorator for Static Typing,Final
0692,PEP 692 – Using TypedDict for more precise **kwargs typing,Final
0689,PEP 689 – Unstable C API tier,Final
0688,PEP 688 – Making the buffer protocol accessible in Python,Final
0701,PEP 701 – Syntactic formalization of f-strings,Accepted
0690,PEP 690 – Lazy Imports,Rejected
0694,PEP 694 – Upload 2.0 API for Python Package Indexes,Draft
0686,PEP 686 – Make UTF-8 mode default,Accepted
0687,PEP 687 – Isolating modules in the standard library,Accepted
0685,PEP 685 – Comparison of extra names for optional distribution dependencies,Final
0691,PEP 691 – JSON-based Simple API for Python Package Indexes,Accepted
0696,PEP 696 – Type Defaults for Type Parameters,Final
0680,PEP 680 – tomllib: Support for Parsing TOML in the Standard Library,Final
0683,"PEP 683 – Immortal Objects, Using a Fixed Refcount",Final
0678,PEP 678 – Enriching Exceptions with Notes,Final
0682,PEP 682 – Format Specifier for Signed Zero,Final
0684,PEP 684 – A Per-Interpreter GIL,Final
0679,PEP 679 – Allow parentheses in assert statements,Draft
0676,PEP 676 – PEP Infrastructure Process,Active
0672,PEP 672 – Unicode-related Security Considerations for Python,Active
0674,PEP 674 – Disallow using macros as l-values,Deferred
0671,PEP 671 – Syntax for late-bound function argument defaults,Draft
0673,PEP 673 – Self Type,Final
0675,PEP 675 – Arbitrary Literal String Type,Final
0681,PEP 681 – Data Class Transforms,Final
0669,PEP 669 – Low Impact Monitoring for CPython,Final
0677,PEP 677 – Callable Type Syntax,Rejected
0668,PEP 668 – Marking Python base environments as “externally managed”,Accepted
0670,PEP 670 – Convert macros to functions in the Python C API,Final
0666,PEP 666 – Reject Foolish Indentation,Rejected
0664,PEP 664 – Python 3.11 Release Schedule,Active
0663,"PEP 663 – Standardizing Enum str(), repr(), and format() behaviors",Rejected
0661,PEP 661 – Sentinel Values,Deferred
0662,PEP 662 – Editable installs via virtual wheels,Rejected
0667,PEP 667 – Consistent views of namespaces,Final
0658,PEP 658 – Serve Distribution Metadata in the Simple Repository API,Accepted
0657,PEP 657 – Include Fine Grained Error Locations in Tracebacks,Final
0652,PEP 652 – Maintaining the Stable ABI,Final
0653,PEP 653 – Precise Semantics for Pattern Matching,Draft
0655,PEP 655 – Marking individual TypedDict items as required or potentially-missing,Final
0651,PEP 651 – Robust Stack Overflow Handling,Rejected
0660,PEP 660 – Editable installs for pyproject.toml based builds (wheel based),Final
0654,PEP 654 – Exception Groups and except*,Final
0659,PEP 659 – Specializing Adaptive Interpreter,Final
0648,PEP 648 – Extensible customizations of the interpreter at startup,Rejected
0665,PEP 665 – A file format to list Python dependencies for reproducibility of an application,Rejected
0650,PEP 650 – Specifying Installer Requirements for Python Projects,Withdrawn
0644,PEP 644 – Require OpenSSL 1.1.1 or newer,Final
0645,PEP 645 – Allow writing optional types as,Withdrawn
0649,PEP 649 – Deferred Evaluation Of Annotations Using Descriptors,Accepted
0641,PEP 641 – Using an underscore in the version portion of Python 3.10 compatibility tags,Rejected
0643,PEP 643 – Metadata for Package Source Distributions,Final
0646,PEP 646 – Variadic Generics,Final
0647,PEP 647 – User-Defined Type Guards,Final
0640,PEP 640 – Unused variable syntax,Rejected
0638,PEP 638 – Syntactic Macros,Draft
0656,PEP 656 – Platform Tag for Linux Distributions Using Musl,Final
0639,PEP 639 – Improving License Clarity with Better Package Metadata,Final
0636,PEP 636 – Structural Pattern Matching: Tutorial,Final
0634,PEP 634 – Structural Pattern Matching: Specification,Final
0631,PEP 631 – Dependency specification in pyproject.toml based on PEP 508,Superseded
0633,PEP 633 – Dependency specification in pyproject.toml using an exploded TOML table,Rejected
0632,PEP 632 – Deprecate distutils module,Final
0629,PEP 629 – Versioning PyPI’s Simple API,Final
0637,PEP 637 – Support for indexing with keyword arguments,Rejected
0642,PEP 642 – Explicit Pattern Syntax for Structural Pattern Matching,Rejected
0630,PEP 630 – Isolating Extension Modules,Final
0628,PEP 628 – Add,Final
0624,PEP 624 – Remove Py_UNICODE encoder APIs,Final
0635,PEP 635 – Structural Pattern Matching: Motivation and Rationale,Final
0626,PEP 626 – Precise line numbers for debugging and other tools.,Final
0623,PEP 623 – Remove wstr from Unicode,Final
0625,PEP 625 – Filename of a Source Distribution,Final
0621,PEP 621 – Storing project metadata in pyproject.toml,Final
0619,PEP 619 – Python 3.10 Release Schedule,Active
0622,PEP 622 – Structural Pattern Matching,Superseded
0618,PEP 618 – Add Optional Length-Checking To zip,Final
0627,PEP 627 – Recording installed projects,Final
0616,PEP 616 – String methods to remove prefixes and suffixes,Final
0620,PEP 620 – Hide implementation details from the C API,Withdrawn
0613,PEP 613 – Explicit Type Aliases,Final
0614,PEP 614 – Relaxing Grammar Restrictions On Decorators,Final
0617,PEP 617 – New PEG parser for CPython,Final
0615,PEP 615 – Support for the IANA Time Zone Database in the Standard Library,Final
0611,PEP 611 – The one million limit,Withdrawn
0609,PEP 609 – Python Packaging Authority (PyPA) Governance,Active
0612,PEP 612 – Parameter Specification Variables,Final
0608,PEP 608 – Coordinated Python release,Rejected
0607,PEP 607 – Reducing CPython’s Feature Delivery Latency,Final
0610,PEP 610 – Recording the Direct URL Origin of installed distributions,Final
0604,PEP 604 – Allow writing union types as,Final
0606,PEP 606 – Python Compatibility Version,Rejected
0603,PEP 603 – Adding a frozenmap type to collections,Draft
0602,PEP 602 – Annual Release Cycle for Python,Active
0601,PEP 601 – Forbid return/break/continue breaking out of finally,Rejected
0596,PEP 596 – Python 3.9 Release Schedule,Active
0595,PEP 595 – Improving bugs.python.org,Withdrawn
0597,PEP 597 – Add optional EncodingWarning,Final
0600,PEP 600 – Future ‘manylinux’ Platform Tags for Portable Linux Built Distributions,Final
0605,PEP 605 – A rolling feature release stream for CPython,Rejected
0598,PEP 598 – Introducing incremental feature releases,Withdrawn
0599,PEP 599 – The manylinux2014 Platform Tag,Superseded
0593,PEP 593 – Flexible function and variable annotations,Final
0591,PEP 591 – Adding a final qualifier to typing,Final
0592,PEP 592 – Adding “Yank” Support to the Simple API,Final
0588,PEP 588 – GitHub Issues Migration Plan,Final
0590,PEP 590 – Vectorcall: a fast calling protocol for CPython,Final
0589,PEP 589 – TypedDict: Type Hints for Dictionaries with a Fixed Set of Keys,Final
0585,PEP 585 – Type Hinting Generics In Standard Collections,Final
0583,PEP 583 – A Concurrency Memory Model for Python,Withdrawn
0586,PEP 586 – Literal Types,Final
0584,PEP 584 – Add Union Operators To dict,Final
0582,PEP 582 – Python local packages directory,Rejected
0581,PEP 581 – Using GitHub Issues for CPython,Final
0594,PEP 594 – Removing dead batteries from the standard library,Final
0574,PEP 574 – Pickle protocol 5 with out-of-band data,Final
0576,PEP 576 – Rationalize Built-in function classes,Withdrawn
0577,PEP 577 – Augmented Assignment Expressions,Withdrawn
0575,PEP 575 – Unifying function/method classes,Withdrawn
0587,PEP 587 – Python Initialization Configuration,Final
0578,PEP 578 – Python Runtime Audit Hooks,Final
0580,PEP 580 – The C call protocol,Rejected
0573,PEP 573 – Module State Access from C Extension Methods,Final
0579,PEP 579 – Refactoring C functions and methods,Final
0569,PEP 569 – Python 3.8 Release Schedule,Final
0566,PEP 566 – Metadata for Python Software Packages 2.1,Final
0571,PEP 571 – The manylinux2010 Platform Tag,Superseded
0568,PEP 568 – Generator-sensitivity for Context Variables,Deferred
0570,PEP 570 – Python Positional-Only Parameters,Final
0565,PEP 565 – Show DeprecationWarning in __main__,Final
0567,PEP 567 – Context Variables,Final
0572,PEP 572 – Assignment Expressions,Final
0564,PEP 564 – Add new time functions with nanosecond resolution,Final
0562,PEP 562 – Module __getattr__ and __dir__,Final
0563,PEP 563 – Postponed Evaluation of Annotations,Superseded
0561,PEP 561 – Distributing and Packaging Type Information,Final
0560,PEP 560 – Core support for typing module and generic types,Final
0555,PEP 555 – Context-local variables (contextvars),Withdrawn
0556,PEP 556 – Threaded garbage collection,Deferred
0557,PEP 557 – Data Classes,Final
0553,PEP 553 – Built-in breakpoint(),Final
0552,PEP 552 – Deterministic pycs,Final
0559,PEP 559 – Built-in noop(),Rejected
0554,PEP 554 – Multiple Interpreters in the Stdlib,Superseded
0549,PEP 549 – Instance Descriptors,Rejected
0551,PEP 551 – Security transparency in the Python runtime,Withdrawn
0547,PEP 547 – Running extension modules using the -m option,Deferred
0548,PEP 548 – More Flexible Loop Control,Rejected
0546,PEP 546 – Backport ssl.MemoryBIO and ssl.SSLObject to Python 2.7,Rejected
0545,PEP 545 – Python Documentation Translations,Active
0542,PEP 542 – Dot Notation Assignment In Function Header,Rejected
0541,PEP 541 – Package Index Name Retention,Final
0539,PEP 539 – A New C-API for Thread-Local Storage in CPython,Final
0540,PEP 540 – Add a new UTF-8 Mode,Final
0536,PEP 536 – Final Grammar for Literal String Interpolation,Withdrawn
0558,PEP 558 – Defined semantics for locals(),Withdrawn
0538,PEP 538 – Coercing the legacy C locale to a UTF-8 based locale,Final
0544,PEP 544 – Protocols: Structural subtyping (static duck typing),Final
0534,PEP 534 – Improved Errors for Missing Standard Library Modules,Deferred
0550,PEP 550 – Execution Context,Withdrawn
0537,PEP 537 – Python 3.7 Release Schedule,Final
0530,PEP 530 – Asynchronous Comprehensions,Final
0531,PEP 531 – Existence checking operators,Withdrawn
0535,PEP 535 – Rich comparison chaining,Deferred
0527,PEP 527 – Removing Un(der)used file types/extensions on PyPI,Final
0528,PEP 528 – Change Windows console encoding to UTF-8,Final
0532,PEP 532 – A circuit breaking protocol and binary operators,Deferred
0533,PEP 533 – Deterministic cleanup for iterators,Deferred
0524,PEP 524 – Make os.urandom() blocking on Linux,Final
0525,PEP 525 – Asynchronous Generators,Final
0526,PEP 526 – Syntax for Variable Annotations,Final
0523,PEP 523 – Adding a frame evaluation API to CPython,Final
0529,PEP 529 – Change Windows filesystem encoding to UTF-8,Final
0520,PEP 520 – Preserving Class Attribute Definition Order,Final
0521,PEP 521 – Managing global context via ‘with’ blocks in generators and coroutines,Withdrawn
0522,PEP 522 – Allow BlockingIOError in security sensitive APIs,Rejected
0543,PEP 543 – A Unified TLS API for Python,Withdrawn
0515,PEP 515 – Underscores in Numeric Literals,Final
0518,PEP 518 – Specifying Minimum Build System Requirements for Python Projects,Final
0514,PEP 514 – Python registration in the Windows registry,Active
0519,PEP 519 – Adding a file system path protocol,Final
0511,PEP 511 – API for code transformers,Rejected
0516,PEP 516 – Build system abstraction for pip/conda etc,Rejected
0510,PEP 510 – Specialize functions with guards,Rejected
0509,PEP 509 – Add a private version to dict,Superseded
0507,PEP 507 – Migrate CPython to Git and GitLab,Rejected
0505,PEP 505 – None-aware operators,Deferred
0512,PEP 512 – Migrating from hg.python.org to GitHub,Final
0508,PEP 508 – Dependency specification for Python Software Packages,Final
0503,PEP 503 – Simple Repository API,Final
0517,PEP 517 – A build-system independent format for source trees,Final
0504,PEP 504 – Using the System RNG by default,Withdrawn
0499,PEP 499 –,Deferred
0502,Extended Discussion,Rejected
0500,PEP 500 – A protocol for delegating datetime methods to their tzinfo implementations,Rejected
0496,PEP 496 – Environment Markers,Rejected
0497,PEP 497 – A standard mechanism for backward compatibility,Rejected
0501,PEP 501 – General purpose template literal strings,Withdrawn
0494,PEP 494 – Python 3.6 Release Schedule,Final
0506,PEP 506 – Adding A Secrets Module To The Standard Library,Final
0498,PEP 498 – Literal String Interpolation,Final
0493,PEP 493 – HTTPS verification migration tools for Python 2.7,Final
0495,PEP 495 – Local Time Disambiguation,Final
0491,PEP 491 – The Wheel Binary Package Format 1.9,Deferred
0492,PEP 492 – Coroutines with async and await syntax,Final
0490,PEP 490 – Chain exceptions at C level,Rejected
0488,PEP 488 – Elimination of PYO files,Final
0486,PEP 486 – Make the Python Launcher aware of virtual environments,Final
0482,PEP 482 – Literature Overview for Type Hints,Final
0489,PEP 489 – Multi-phase extension module initialization,Final
0483,PEP 483 – The Theory of Type Hints,Final
0485,PEP 485 – A Function for testing approximate equality,Final
0481,"PEP 481 – Migrate CPython to Git, Github, and Phabricator",Withdrawn
0478,PEP 478 – Python 3.5 Release Schedule,Final
0484,PEP 484 – Type Hints,Final
0487,PEP 487 – Simpler customisation of class creation,Final
0477,PEP 477 – Backport ensurepip (PEP 453) to Python 2.7,Final
0476,PEP 476 – Enabling certificate verification by default for stdlib http clients,Final
0480,PEP 480 – Surviving a Compromise of PyPI: End-to-end signing of packages,Draft
0475,PEP 475 – Retry system calls failing with EINTR,Final
0474,PEP 474 – Creating forge.python.org,Withdrawn
0479,PEP 479 – Change StopIteration handling inside generators,Final
0473,PEP 473 – Adding structured data to built-in exceptions,Rejected
0513,PEP 513 – A Platform Tag for Portable Linux Built Distributions,Superseded
0470,PEP 470 – Removing External Hosting Support on PyPI,Final
0468,PEP 468 – Preserving the order of **kwargs in a function.,Final
0472,PEP 472 – Support for indexing with keyword arguments,Rejected
0469,PEP 469 – Migration of dict iteration code to Python 3,Withdrawn
0467,PEP 467 – Minor API improvements for binary sequences,Draft
0471,PEP 471 – os.scandir() function – a better and faster directory iterator,Final
0464,PEP 464 – Removal of the PyPI Mirror Authenticity API,Final
0461,PEP 461 – Adding % formatting to bytes and bytearray,Final
0460,PEP 460 – Add binary interpolation and formatting,Withdrawn
0466,PEP 466 – Network Security Enhancements for Python 2.7.x,Final
0459,PEP 459 – Standard Metadata Extensions for Python Software Packages,Withdrawn
0457,PEP 457 – Notation For Positional-Only Parameters,Final
0462,PEP 462 – Core development workflow automation for CPython,Withdrawn
0458,PEP 458 – Secure PyPI downloads with signed repository metadata,Accepted
0455,PEP 455 – Adding a key-transforming dictionary to collections,Rejected
0454,PEP 454 – Add a new tracemalloc module to trace Python memory allocations,Final
0452,PEP 452 – API for Cryptographic Hash Functions v2.0,Final
0451,PEP 451 – A ModuleSpec Type for the Import System,Final
0449,PEP 449 – Removal of the PyPI Mirror Auto Discovery and Naming Scheme,Final
0448,PEP 448 – Additional Unpacking Generalizations,Final
0456,PEP 456 – Secure and interchangeable hash algorithm,Final
0453,PEP 453 – Explicit bootstrapping of pip in Python installations,Final
0463,PEP 463 – Exception-catching expressions,Rejected
0447,PEP 447 – Add __getdescriptor__ method to metaclass,Deferred
0465,PEP 465 – A dedicated infix operator for matrix multiplication,Final
0450,PEP 450 – Adding A Statistics Module To The Standard Library,Final
0446,PEP 446 – Make newly created file descriptors non-inheritable,Final
0439,PEP 439 – Inclusion of implicit pip bootstrap in Python installation,Rejected
0445,PEP 445 – Add new APIs to customize Python memory allocators,Final
0437,"PEP 437 – A DSL for specifying signatures, annotations and argument converters",Rejected
0438,PEP 438 – Transitioning to release-file hosting on PyPI,Superseded
0443,PEP 443 – Single-dispatch generic functions,Final
0441,PEP 441 – Improving Python ZIP Application Support,Final
0442,PEP 442 – Safe object finalization,Final
0434,PEP 434 – IDLE Enhancement Exception for All Branches,Active
0440,PEP 440 – Version Identification and Dependency Specification,Final
0435,PEP 435 – Adding an Enum type to the Python standard library,Final
0444,PEP 444 – Python Web3 Interface,Deferred
0436,PEP 436 – The Argument Clinic DSL,Final
0430,PEP 430 – Migrating to Python 3 as the default online documentation,Final
0429,PEP 429 – Python 3.4 Release Schedule,Final
0433,PEP 433 – Easier suppression of file descriptor inheritance,Superseded
0432,PEP 432 – Restructuring the CPython startup sequence,Withdrawn
0425,PEP 425 – Compatibility Tags for Built Distributions,Final
0424,PEP 424 – A method for exposing a length hint,Final
0427,PEP 427 – The Wheel Binary Package Format 1.0,Final
0428,PEP 428 – The pathlib module – object-oriented filesystem paths,Final
0431,PEP 431 – Time zone support improvements,Superseded
0421,PEP 421 – Adding sys.implementation,Final
0422,PEP 422 – Simpler customisation of class creation,Withdrawn
0415,PEP 415 – Implement context suppression with exception attributes,Final
0416,PEP 416 – Add a frozendict builtin type,Rejected
0417,PEP 417 – Including mock in the Standard Library,Final
0414,PEP 414 – Explicit Unicode Literal for Python 3.3,Final
0413,PEP 413 – Faster evolution of the Python Standard Library,Withdrawn
0419,PEP 419 – Protecting cleanup statements from interruptions,Deferred
0418,"PEP 418 – Add monotonic time, performance counter, and process time functions",Final
0411,PEP 411 – Provisional packages in the Python standard library,Superseded
0412,PEP 412 – Key-Sharing Dictionary,Final
0420,PEP 420 – Implicit Namespace Packages,Final
0408,PEP 408 – Standard library __preview__ package,Rejected
0426,PEP 426 – Metadata for Python Software Packages 2.0,Withdrawn
0407,PEP 407 – New release cycle and introducing long-term support versions,Deferred
0423,PEP 423 – Naming conventions and recipes related to packaging,Deferred
0409,PEP 409 – Suppressing exception context,Final
0404,PEP 404 – Python 2.8 Un-release Schedule,Final
0410,PEP 410 – Use decimal.Decimal type for timestamps,Rejected
0406,PEP 406 – Improved Encapsulation of Import State,Withdrawn
0398,PEP 398 – Python 3.3 Release Schedule,Final
0399,PEP 399 – Pure Python/C Accelerator Module Compatibility Requirements,Final
0401,PEP 401 – BDFL Retirement,April Fool!
0403,PEP 403 – General purpose decorator clause (aka “@in” clause),Deferred
0402,PEP 402 – Simplified Package Layout and Partitioning,Rejected
0396,PEP 396 – Module Version Numbers,Withdrawn
0405,PEP 405 – Python Virtual Environments,Final
0392,PEP 392 – Python 3.2 Release Schedule,Final
0397,PEP 397 – Python launcher for Windows,Final
0400,PEP 400 – Deprecate codecs.StreamReader and codecs.StreamWriter,Deferred
0390,PEP 390 – Static metadata for Distutils,Rejected
0394,PEP 394 – The “python” Command on Unix-Like Systems,Active
0391,PEP 391 – Dictionary-Based Configuration For Logging,Final
0395,PEP 395 – Qualified Names for Modules,Withdrawn
0389,New Command Line Parsing Module,Final
0383,PEP 383 – Non-decodable Bytes in System Character Interfaces,Final
0393,PEP 393 – Flexible String Representation,Final
0387,PEP 387 – Backwards Compatibility Policy,Active
0382,PEP 382 – Namespace Packages,Rejected
0381,PEP 381 – Mirroring infrastructure for PyPI,Withdrawn
0384,PEP 384 – Defining a Stable ABI,Final
0385,PEP 385 – Migrating from Subversion to Mercurial,Final
0386,PEP 386 – Changing the version comparison module in Distutils,Superseded
0379,PEP 379 – Adding an Assignment Expression,Withdrawn
0380,PEP 380 – Syntax for Delegating to a Subgenerator,Final
0375,PEP 375 – Python 3.1 Release Schedule,Final
0377,PEP 377 – Allow __enter__() methods to skip the statement body,Rejected
0373,PEP 373 – Python 2.7 Release Schedule,Final
0376,PEP 376 – Database of Installed Python Distributions,Final
0378,PEP 378 – Format Specifier for Thousands Separator,Final
0371,PEP 371 – Addition of the multiprocessing package to the standard library,Final
0370,PEP 370 – Per user site-packages directory,Final
0369,PEP 369 – Post import hooks,Withdrawn
0372,PEP 372 – Adding an ordered dictionary to collections,Final
0365,PEP 365 – Adding the pkg_resources module,Rejected
0374,PEP 374 – Choosing a distributed VCS for the Python project,Final
0367,PEP 367 – New Super,Superseded
0368,PEP 368 – Standard image protocol and class,Deferred
0363,PEP 363 – Syntax For Dynamic Attribute Access,Rejected
0364,PEP 364 – Transitioning to the Py3K Standard Library,Withdrawn
0360,PEP 360 – Externally Maintained Packages,Final
0366,PEP 366 – Main module explicit relative imports,Final
0361,PEP 361 – Python 2.6 and 3.0 Release Schedule,Final
0362,PEP 362 – Function Signature Object,Final
0359,PEP 359 – The “make” Statement,Withdrawn
0356,PEP 356 – Python 2.5 Release Schedule,Final
0353,PEP 353 – Using ssize_t as the index type,Final
0357,PEP 357 – Allowing Any Object to be Used for Slicing,Final
0354,PEP 354 – Enumerations in Python,Superseded
0355,Object oriented filesystem paths,Rejected
0351,PEP 351 – The freeze protocol,Rejected
0352,PEP 352 – Required Superclass for Exceptions,Final
0349,PEP 349 – Allow str() to return unicode strings,Rejected
0358,PEP 358 – The “bytes” Object,Final
0348,PEP 348 – Exception Reorganization for Python 3.0,Rejected
0350,PEP 350 – Codetags,Rejected
0347,PEP 347 – Migrating the Python CVS to Subversion,Final
0341,PEP 341 – Unifying try-except and try-finally,Final
0345,PEP 345 – Metadata for Python Software Packages 1.2,Superseded
0342,PEP 342 – Coroutines via Enhanced Generators,Final
0343,PEP 343 – The “with” Statement,Final
0346,PEP 346 – User Defined (”,Withdrawn
0344,PEP 344 – Exception Chaining and Embedded Tracebacks,Superseded
0337,PEP 337 – Logging Usage in the Standard Library,Deferred
0340,PEP 340 – Anonymous Block Statements,Rejected
0338,PEP 338 – Executing modules as scripts,Final
0336,PEP 336 – Make None Callable,Rejected
0334,PEP 334 – Simple Coroutines via SuspendIteration,Withdrawn
0335,PEP 335 – Overloadable Boolean Operators,Rejected
0339,PEP 339 – Design of the CPython Compiler,Withdrawn
0332,PEP 332 – Byte vectors and String/Unicode Unification,Rejected
0330,PEP 330 – Python Bytecode Verification,Rejected
0331,PEP 331 – Locale-Independent Float/String Conversions,Final
0329,PEP 329 – Treating Builtins as Constants in the Standard Library,Rejected
0325,PEP 325 – Resource-Release Support for Generators,Rejected
0328,PEP 328 – Imports: Multi-Line and Absolute/Relative,Final
0322,PEP 322 – Reverse Iteration,Final
0324,New process module,Final
0323,PEP 323 – Copyable Iterators,Deferred
0326,PEP 326 – A Case for Top and Bottom Values,Rejected
0319,PEP 319 – Python Synchronize/Asynchronize Block,Rejected
0327,PEP 327 – Decimal Data Type,Final
0320,PEP 320 – Python 2.4 Release Schedule,Final
0316,PEP 316 – Programming by Contract for Python,Deferred
0317,PEP 317 – Eliminate Implicit Exception Instantiation,Rejected
0321,PEP 321 – Date/Time Parsing and Formatting,Withdrawn
0315,PEP 315 – Enhanced While Loop,Rejected
0333,PEP 333 – Python Web Server Gateway Interface v1.0,Final
0318,PEP 318 – Decorators for Functions and Methods,Final
0314,PEP 314 – Metadata for Python Software Packages 1.1,Superseded
0313,PEP 313 – Adding Roman Numeral Literals to Python,Rejected
0311,PEP 311 – Simplified Global Interpreter Lock Acquisition for Extensions,Final
0312,PEP 312 – Simple Implicit Lambda,Deferred
0309,PEP 309 – Partial Function Application,Final
0306,PEP 306 – How to Change Python’s Grammar,Withdrawn
0310,PEP 310 – Reliable Acquisition/Release Pairs,Rejected
0308,PEP 308 – Conditional Expressions,Final
0303,PEP 303 – Extend divmod() for Multiple Divisors,Rejected
0299,PEP 299 – Special __main__() function in modules,Rejected
0301,PEP 301 – Package Index and Metadata for Distutils,Final
0298,PEP 298 – The Locked Buffer Interface,Withdrawn
0304,PEP 304 – Controlling Generation of Bytecode Files,Withdrawn
0297,PEP 297 – Support for System Upgrades,Rejected
0295,PEP 295 – Interpretation of multiline string constants,Rejected
0302,PEP 302 – New Import Hooks,Final
0305,PEP 305 – CSV File API,Final
0294,PEP 294 – Type Names in the types Module,Rejected
0296,PEP 296 – Adding a bytes Object Type,Withdrawn
0291,PEP 291 – Backward Compatibility for the Python 2 Standard Library,Superseded
0292,PEP 292 – Simpler String Substitutions,Final
0293,PEP 293 – Codec Error Handling Callbacks,Final
0307,PEP 307 – Extensions to the pickle protocol,Final
0290,PEP 290 – Code Migration and Modernization,Active
0289,PEP 289 – Generator Expressions,Final
0288,PEP 288 – Generators Attributes and Exceptions,Withdrawn
0286,PEP 286 – Enhanced Argument Tuples,Deferred
0284,PEP 284 – Integer for-loops,Rejected
0287,PEP 287 – reStructuredText Docstring Format,Active
0281,PEP 281 – Loop Counter Iteration with range and xrange,Rejected
0283,PEP 283 – Python 2.3 Release Schedule,Final
0279,PEP 279 – The enumerate() built-in function,Final
0285,PEP 285 – Adding a bool type,Final
0282,PEP 282 – A Logging System,Final
0280,PEP 280 – Optimizing access to globals,Deferred
0277,PEP 277 – Unicode file name support for Windows NT,Final
0278,PEP 278 – Universal Newline Support,Final
0271,PEP 271 – Prefixing sys.path by command line option,Rejected
0276,PEP 276 – Simple Iterator for ints,Rejected
0270,PEP 270 – uniq method for list objects,Rejected
0273,PEP 273 – Import Modules from Zip Archives,Final
0275,PEP 275 – Switching on Multiple Values,Rejected
0269,PEP 269 – Pgen Module for Python,Deferred
0268,PEP 268 – Extended HTTP functionality and WebDAV,Rejected
0267,PEP 267 – Optimized Access to Module Namespaces,Deferred
0266,PEP 266 – Optimizing Global Variable/Attribute Access,Withdrawn
0265,PEP 265 – Sorting Dictionaries by Value,Rejected
0264,PEP 264 – Future statements in simulated shells,Final
0263,PEP 263 – Defining Python Source Code Encodings,Final
0272,PEP 272 – API for Block Encryption Algorithms v1.0,Final
0274,PEP 274 – Dict Comprehensions,Final
0261,PEP 261 – Support for “wide” Unicode characters,Final
0262,PEP 262 – A Database of Installed Python Packages,Rejected
0260,PEP 260 – Simplify xrange(),Final
0259,PEP 259 – Omit printing newline after newline,Rejected
0256,PEP 256 – Docstring Processing System Framework,Rejected
0257,PEP 257 – Docstring Conventions,Active
0254,PEP 254 – Making Classes Look More Like Types,Rejected
0251,PEP 251 – Python 2.2 Release Schedule,Final
0250,PEP 250 – Using site-packages on Windows,Final
0252,PEP 252 – Making Types Look More Like Classes,Final
0255,PEP 255 – Simple Generators,Final
0253,PEP 253 – Subtyping Built-in Types,Final
0247,PEP 247 – API for Cryptographic Hash Functions,Final
0245,PEP 245 – Python Interface Syntax,Rejected
0248,PEP 248 – Python Database API Specification v1.0,Final
0244,PEP 244 – The,Rejected
0243,PEP 243 – Module Repository Upload Mechanism,Withdrawn
0249,PEP 249 – Python Database API Specification v2.0,Final
0241,PEP 241 – Metadata for Python Software Packages,Superseded
0240,PEP 240 – Adding a Rational Literal to Python,Rejected
0246,PEP 246 – Object Adaptation,Rejected
0239,PEP 239 – Adding a Rational Type to Python,Rejected
0242,PEP 242 – Numeric Kinds,Withdrawn
0258,PEP 258 – Docutils Design Specification,Rejected
0238,PEP 238 – Changing the Division Operator,Final
0236,PEP 236 – Back to the __future__,Final
0237,PEP 237 – Unifying Long Integers and Integers,Final
0235,PEP 235 – Import on Case-Insensitive Platforms,Final
0233,PEP 233 – Python Online Help,Deferred
0234,PEP 234 – Iterators,Final
0229,PEP 229 – Using Distutils to Build Python,Final
0228,PEP 228 – Reworking Python’s Numeric Model,Withdrawn
0232,PEP 232 – Function Attributes,Final
0226,PEP 226 – Python 2.1 Release Schedule,Final
0230,PEP 230 – Warning Framework,Final
0224,PEP 224 – Attribute Docstrings,Rejected
0220,"PEP 220 – Coroutines, Generators, Continuations",Rejected
0221,PEP 221 – Import As,Final
0227,PEP 227 – Statically Nested Scopes,Final
0222,PEP 222 – Web Library Enhancements,Deferred
0225,PEP 225 – Elementwise/Objectwise Operators,Rejected
0231,PEP 231 – __findattr__(),Rejected
0217,PEP 217 – Display Hook for Interactive Use,Final
0215,PEP 215 – String Interpolation,Superseded
0219,PEP 219 – Stackless Python,Deferred
0218,PEP 218 – Adding a Built-In Set Object Type,Final
0212,PEP 212 – Loop Counter Iteration,Rejected
0214,PEP 214 – Extended Print Statement,Final
0223,PEP 223 – Change the Meaning of,Final
0210,PEP 210 – Decoupling the Interpreter Loop,Rejected
0216,PEP 216 – Docstring Format,Withdrawn
0206,PEP 206 – Python Advanced Library,Withdrawn
0208,PEP 208 – Reworking the Coercion Model,Final
0209,PEP 209 – Multi-dimensional Arrays,Withdrawn
0207,PEP 207 – Rich Comparisons,Final
0203,PEP 203 – Augmented Assignments,Final
0204,PEP 204 – Range Literals,Rejected
0211,PEP 211 – Adding A New Outer Product Operator,Rejected
0213,PEP 213 – Attribute Access Handlers,Deferred
0005,PEP 5 – Guidelines for Language Evolution,Superseded
0004,PEP 4 – Deprecation of Standard Modules,Active
0002,PEP 2 – Procedure for Adding New Modules,Active
0003,PEP 3 – Guidelines for Handling Bug Reports,Withdrawn
0201,PEP 201 – Lockstep Iteration,Final
0200,PEP 200 – Python 2.0 Release Schedule,Final
0205,PEP 205 – Weak References,Final
0202,PEP 202 – List Comprehensions,Final
